// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.11
// source: api/streamblock.proto

package stream

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StreamBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source  string           `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	IsCache bool             `protobuf:"varint,2,opt,name=isCache,proto3" json:"isCache,omitempty"`
	Block   *PayloadAndTrace `protobuf:"bytes,3,opt,name=block,proto3" json:"block,omitempty"`
}

func (x *StreamBlock) Reset() {
	*x = StreamBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_streamblock_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamBlock) ProtoMessage() {}

func (x *StreamBlock) ProtoReflect() protoreflect.Message {
	mi := &file_api_streamblock_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamBlock.ProtoReflect.Descriptor instead.
func (*StreamBlock) Descriptor() ([]byte, []int) {
	return file_api_streamblock_proto_rawDescGZIP(), []int{0}
}

func (x *StreamBlock) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *StreamBlock) GetIsCache() bool {
	if x != nil {
		return x.IsCache
	}
	return false
}

func (x *StreamBlock) GetBlock() *PayloadAndTrace {
	if x != nil {
		return x.Block
	}
	return nil
}

type PayloadAndTrace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trace   *SignedBidTrace     `protobuf:"bytes,2,opt,name=trace,proto3" json:"trace,omitempty"`
	Payload *PayloadWithVersion `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *PayloadAndTrace) Reset() {
	*x = PayloadAndTrace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_streamblock_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayloadAndTrace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadAndTrace) ProtoMessage() {}

func (x *PayloadAndTrace) ProtoReflect() protoreflect.Message {
	mi := &file_api_streamblock_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadAndTrace.ProtoReflect.Descriptor instead.
func (*PayloadAndTrace) Descriptor() ([]byte, []int) {
	return file_api_streamblock_proto_rawDescGZIP(), []int{1}
}

func (x *PayloadAndTrace) GetTrace() *SignedBidTrace {
	if x != nil {
		return x.Trace
	}
	return nil
}

func (x *PayloadAndTrace) GetPayload() *PayloadWithVersion {
	if x != nil {
		return x.Payload
	}
	return nil
}

type SignedBidTrace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature []byte    `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Message   *BidTrace `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SignedBidTrace) Reset() {
	*x = SignedBidTrace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_streamblock_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignedBidTrace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedBidTrace) ProtoMessage() {}

func (x *SignedBidTrace) ProtoReflect() protoreflect.Message {
	mi := &file_api_streamblock_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedBidTrace.ProtoReflect.Descriptor instead.
func (*SignedBidTrace) Descriptor() ([]byte, []int) {
	return file_api_streamblock_proto_rawDescGZIP(), []int{2}
}

func (x *SignedBidTrace) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *SignedBidTrace) GetMessage() *BidTrace {
	if x != nil {
		return x.Message
	}
	return nil
}

type BidTrace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot                 uint64 `protobuf:"varint,1,opt,name=Slot,proto3" json:"Slot,omitempty"`
	ParentHash           []byte `protobuf:"bytes,2,opt,name=ParentHash,proto3" json:"ParentHash,omitempty"`
	BlockHash            []byte `protobuf:"bytes,3,opt,name=BlockHash,proto3" json:"BlockHash,omitempty"`
	BuilderPubkey        []byte `protobuf:"bytes,4,opt,name=BuilderPubkey,proto3" json:"BuilderPubkey,omitempty"`
	ProposerPubkey       []byte `protobuf:"bytes,5,opt,name=ProposerPubkey,proto3" json:"ProposerPubkey,omitempty"`
	ProposerFeeRecipient []byte `protobuf:"bytes,6,opt,name=ProposerFeeRecipient,proto3" json:"ProposerFeeRecipient,omitempty"`
	GasLimit             uint64 `protobuf:"varint,7,opt,name=GasLimit,proto3" json:"GasLimit,omitempty"`
	GasUsed              uint64 `protobuf:"varint,8,opt,name=GasUsed,proto3" json:"GasUsed,omitempty"`
	Value                []byte `protobuf:"bytes,9,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *BidTrace) Reset() {
	*x = BidTrace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_streamblock_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BidTrace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BidTrace) ProtoMessage() {}

func (x *BidTrace) ProtoReflect() protoreflect.Message {
	mi := &file_api_streamblock_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BidTrace.ProtoReflect.Descriptor instead.
func (*BidTrace) Descriptor() ([]byte, []int) {
	return file_api_streamblock_proto_rawDescGZIP(), []int{3}
}

func (x *BidTrace) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *BidTrace) GetParentHash() []byte {
	if x != nil {
		return x.ParentHash
	}
	return nil
}

func (x *BidTrace) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *BidTrace) GetBuilderPubkey() []byte {
	if x != nil {
		return x.BuilderPubkey
	}
	return nil
}

func (x *BidTrace) GetProposerPubkey() []byte {
	if x != nil {
		return x.ProposerPubkey
	}
	return nil
}

func (x *BidTrace) GetProposerFeeRecipient() []byte {
	if x != nil {
		return x.ProposerFeeRecipient
	}
	return nil
}

func (x *BidTrace) GetGasLimit() uint64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

func (x *BidTrace) GetGasUsed() uint64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

func (x *BidTrace) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type PayloadWithVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string            `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Payload *ExecutionPayload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *PayloadWithVersion) Reset() {
	*x = PayloadWithVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_streamblock_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayloadWithVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadWithVersion) ProtoMessage() {}

func (x *PayloadWithVersion) ProtoReflect() protoreflect.Message {
	mi := &file_api_streamblock_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadWithVersion.ProtoReflect.Descriptor instead.
func (*PayloadWithVersion) Descriptor() ([]byte, []int) {
	return file_api_streamblock_proto_rawDescGZIP(), []int{4}
}

func (x *PayloadWithVersion) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *PayloadWithVersion) GetPayload() *ExecutionPayload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type ExecutionPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentHash    []byte   `protobuf:"bytes,1,opt,name=parentHash,proto3" json:"parentHash,omitempty"`
	FeeRecipient  []byte   `protobuf:"bytes,2,opt,name=feeRecipient,proto3" json:"feeRecipient,omitempty"`
	StateRoot     []byte   `protobuf:"bytes,3,opt,name=stateRoot,proto3" json:"stateRoot,omitempty"`
	ReceiptsRoot  []byte   `protobuf:"bytes,4,opt,name=receiptsRoot,proto3" json:"receiptsRoot,omitempty"`
	LogsBloom     []byte   `protobuf:"bytes,5,opt,name=logsBloom,proto3" json:"logsBloom,omitempty"`
	Random        []byte   `protobuf:"bytes,6,opt,name=random,proto3" json:"random,omitempty"`
	BlockNumber   uint64   `protobuf:"varint,7,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	GasLimit      uint64   `protobuf:"varint,8,opt,name=gasLimit,proto3" json:"gasLimit,omitempty"`
	GasUsed       uint64   `protobuf:"varint,9,opt,name=gasUsed,proto3" json:"gasUsed,omitempty"`
	Timestamp     uint64   `protobuf:"varint,10,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ExtraData     []byte   `protobuf:"bytes,11,opt,name=extraData,proto3" json:"extraData,omitempty"`
	BaseFeePerGas []byte   `protobuf:"bytes,12,opt,name=baseFeePerGas,proto3" json:"baseFeePerGas,omitempty"`
	BlockHash     []byte   `protobuf:"bytes,13,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	Transactions  [][]byte `protobuf:"bytes,14,rep,name=transactions,proto3" json:"transactions,omitempty"`
}

func (x *ExecutionPayload) Reset() {
	*x = ExecutionPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_streamblock_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionPayload) ProtoMessage() {}

func (x *ExecutionPayload) ProtoReflect() protoreflect.Message {
	mi := &file_api_streamblock_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionPayload.ProtoReflect.Descriptor instead.
func (*ExecutionPayload) Descriptor() ([]byte, []int) {
	return file_api_streamblock_proto_rawDescGZIP(), []int{5}
}

func (x *ExecutionPayload) GetParentHash() []byte {
	if x != nil {
		return x.ParentHash
	}
	return nil
}

func (x *ExecutionPayload) GetFeeRecipient() []byte {
	if x != nil {
		return x.FeeRecipient
	}
	return nil
}

func (x *ExecutionPayload) GetStateRoot() []byte {
	if x != nil {
		return x.StateRoot
	}
	return nil
}

func (x *ExecutionPayload) GetReceiptsRoot() []byte {
	if x != nil {
		return x.ReceiptsRoot
	}
	return nil
}

func (x *ExecutionPayload) GetLogsBloom() []byte {
	if x != nil {
		return x.LogsBloom
	}
	return nil
}

func (x *ExecutionPayload) GetRandom() []byte {
	if x != nil {
		return x.Random
	}
	return nil
}

func (x *ExecutionPayload) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *ExecutionPayload) GetGasLimit() uint64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

func (x *ExecutionPayload) GetGasUsed() uint64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

func (x *ExecutionPayload) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ExecutionPayload) GetExtraData() []byte {
	if x != nil {
		return x.ExtraData
	}
	return nil
}

func (x *ExecutionPayload) GetBaseFeePerGas() []byte {
	if x != nil {
		return x.BaseFeePerGas
	}
	return nil
}

func (x *ExecutionPayload) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *ExecutionPayload) GetTransactions() [][]byte {
	if x != nil {
		return x.Transactions
	}
	return nil
}

var File_api_streamblock_proto protoreflect.FileDescriptor

var file_api_streamblock_proto_rawDesc = []byte{
	0x0a, 0x15, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x22,
	0x6e, 0x0a, 0x0b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x12, 0x2d, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x41, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x63, 0x65, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x22,
	0x75, 0x0a, 0x0f, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x6e, 0x64, 0x54, 0x72, 0x61,
	0x63, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x42, 0x69, 0x64, 0x54, 0x72, 0x61, 0x63, 0x65, 0x52, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x12, 0x34, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x57, 0x69, 0x74, 0x68, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x5a, 0x0a, 0x0e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x42, 0x69, 0x64, 0x54, 0x72, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x2e, 0x42, 0x69, 0x64, 0x54, 0x72, 0x61, 0x63, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0xaa, 0x02, 0x0a, 0x08, 0x42, 0x69, 0x64, 0x54, 0x72, 0x61, 0x63, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x53, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x53,
	0x6c, 0x6f, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x24, 0x0a, 0x0d, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6b,
	0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65,
	0x72, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12,
	0x32, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x46, 0x65, 0x65, 0x52, 0x65,
	0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x14, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x46, 0x65, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69,
	0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x47, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x47, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x47, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x62, 0x0a, 0x12, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x57, 0x69, 0x74, 0x68, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x32, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x22, 0xca, 0x03, 0x0a, 0x10, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x65, 0x65, 0x52,
	0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c,
	0x66, 0x65, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x70, 0x74, 0x73, 0x52, 0x6f, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x73, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x73, 0x42, 0x6c, 0x6f, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x73, 0x42, 0x6c, 0x6f, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x72, 0x61,
	0x6e, 0x64, 0x6f, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x61, 0x73, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x67, 0x61, 0x73, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x67, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x65,
	0x46, 0x65, 0x65, 0x50, 0x65, 0x72, 0x47, 0x61, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0d, 0x62, 0x61, 0x73, 0x65, 0x46, 0x65, 0x65, 0x50, 0x65, 0x72, 0x47, 0x61, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x22, 0x0a, 0x0c,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0e, 0x20, 0x03,
	0x28, 0x0c, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x42, 0x0c, 0x5a, 0x0a, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_streamblock_proto_rawDescOnce sync.Once
	file_api_streamblock_proto_rawDescData = file_api_streamblock_proto_rawDesc
)

func file_api_streamblock_proto_rawDescGZIP() []byte {
	file_api_streamblock_proto_rawDescOnce.Do(func() {
		file_api_streamblock_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_streamblock_proto_rawDescData)
	})
	return file_api_streamblock_proto_rawDescData
}

var file_api_streamblock_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_api_streamblock_proto_goTypes = []interface{}{
	(*StreamBlock)(nil),        // 0: stream.StreamBlock
	(*PayloadAndTrace)(nil),    // 1: stream.PayloadAndTrace
	(*SignedBidTrace)(nil),     // 2: stream.SignedBidTrace
	(*BidTrace)(nil),           // 3: stream.BidTrace
	(*PayloadWithVersion)(nil), // 4: stream.PayloadWithVersion
	(*ExecutionPayload)(nil),   // 5: stream.ExecutionPayload
}
var file_api_streamblock_proto_depIdxs = []int32{
	1, // 0: stream.StreamBlock.block:type_name -> stream.PayloadAndTrace
	2, // 1: stream.PayloadAndTrace.trace:type_name -> stream.SignedBidTrace
	4, // 2: stream.PayloadAndTrace.payload:type_name -> stream.PayloadWithVersion
	3, // 3: stream.SignedBidTrace.message:type_name -> stream.BidTrace
	5, // 4: stream.PayloadWithVersion.payload:type_name -> stream.ExecutionPayload
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_api_streamblock_proto_init() }
func file_api_streamblock_proto_init() {
	if File_api_streamblock_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_streamblock_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_streamblock_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayloadAndTrace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_streamblock_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignedBidTrace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_streamblock_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BidTrace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_streamblock_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayloadWithVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_streamblock_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_streamblock_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_streamblock_proto_goTypes,
		DependencyIndexes: file_api_streamblock_proto_depIdxs,
		MessageInfos:      file_api_streamblock_proto_msgTypes,
	}.Build()
	File_api_streamblock_proto = out.File
	file_api_streamblock_proto_rawDesc = nil
	file_api_streamblock_proto_goTypes = nil
	file_api_streamblock_proto_depIdxs = nil
}
